{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Google Drive\\\\Projects\\\\SUSS mods\\\\sussmods-website-v2\\\\src\\\\SaveBtn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { SavedModulesContext } from './SavedModulesContext';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SaveBtn(props) {\n  _s();\n\n  const baseBtnClass = \"btn add-rm-mod-btn\";\n  const saveBtn = {\n    btnClass: `${baseBtnClass} ${props.btnSize === \"wide\" ? \"btn-lg-icon\" : \"btn-sm-icon\"} primary-btn`,\n    btnText: \"Save\",\n    btnIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 18\n    }, this)\n  };\n  const removeBtn = {\n    btnClass: `${baseBtnClass} ${props.btnSize === \"wide\" ? \"btn-lg-icon\" : \"btn-sm-icon\"} secondary-btn`,\n    btnText: \"Remove\",\n    btnIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this)\n  };\n  const {\n    savedMods,\n    setSavedMods\n  } = useContext(SavedModulesContext);\n  const [btnType, setBtnType] = useState(savedMods.includes(props.modCode) ? removeBtn : saveBtn);\n\n  const toggleIsSaved = () => {\n    // update context\n    setSavedMods(prevSavedMods => {\n      if (prevSavedMods.includes(props.modCode)) {\n        return prevSavedMods.filter(mod => mod !== props.modCode);\n      } else {\n        return [props.modCode, ...prevSavedMods];\n      }\n    }); // update btn\n\n    setBtnType(prevBtnType => {\n      const newBtnType = prevBtnType.btnText.toLowerCase() === \"save\" ? removeBtn : saveBtn;\n      return newBtnType;\n    }); // update showMsg\n\n    props.setShowSaveMsg(prevShowSaveMsg => {\n      return !prevShowSaveMsg;\n    });\n  };\n\n  useEffect(() => {\n    props.setShowSaveMsg(prevShowSaveMsg => {\n      return prevShowSaveMsg && savedMods.includes(props.modCode) && btnType.btnText.toLowerCase() === \"remove\";\n    });\n  }, [props, savedMods, btnType.btnText]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: btnType.btnClass,\n      onClick: toggleIsSaved,\n      children: [btnType.btnIcon, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: btnType.btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SaveBtn, \"yagmEjHKqiAajvJDVbt/Ocq3SyE=\");\n\n_c = SaveBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveBtn\");","map":{"version":3,"sources":["C:/Users/User/Google Drive/Projects/SUSS mods/sussmods-website-v2/src/SaveBtn.jsx"],"names":["React","useState","useEffect","useContext","SavedModulesContext","AddIcon","DeleteIcon","SaveBtn","props","baseBtnClass","saveBtn","btnClass","btnSize","btnText","btnIcon","removeBtn","savedMods","setSavedMods","btnType","setBtnType","includes","modCode","toggleIsSaved","prevSavedMods","filter","mod","prevBtnType","newBtnType","toLowerCase","setShowSaveMsg","prevShowSaveMsg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEnC,QAAMC,YAAY,GAAG,oBAArB;AAEA,QAAMC,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAG,GAAEF,YAAa,IAAGD,KAAK,CAACI,OAAN,KAAkB,MAAlB,GAA0B,aAA1B,GAA0C,aAAc,cADzE;AAEZC,IAAAA,OAAO,EAAE,MAFG;AAGZC,IAAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAHG,GAAhB;AAMA,QAAMC,SAAS,GAAG;AACdJ,IAAAA,QAAQ,EAAG,GAAEF,YAAa,IAAGD,KAAK,CAACI,OAAN,KAAkB,MAAlB,GAA0B,aAA1B,GAA0C,aAAc,gBADvE;AAEdC,IAAAA,OAAO,EAAE,QAFK;AAGdC,IAAAA,OAAO,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAHK,GAAlB;AAMA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8Bd,UAAU,CAACC,mBAAD,CAA9C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAACe,SAAS,CAACI,QAAV,CAAmBZ,KAAK,CAACa,OAAzB,IAAmCN,SAAnC,GAA+CL,OAAhD,CAAtC;;AAEA,QAAMY,aAAa,GAAG,MAAM;AACxB;AACAL,IAAAA,YAAY,CAACM,aAAa,IAAI;AAC1B,UAAIA,aAAa,CAACH,QAAd,CAAuBZ,KAAK,CAACa,OAA7B,CAAJ,EAA2C;AACvC,eAAOE,aAAa,CAACC,MAAd,CAAqBC,GAAG,IAAIA,GAAG,KAAKjB,KAAK,CAACa,OAA1C,CAAP;AACH,OAFD,MAEO;AACH,eAAO,CAACb,KAAK,CAACa,OAAP,EAAgB,GAAGE,aAAnB,CAAP;AACH;AACJ,KANW,CAAZ,CAFwB,CAUxB;;AACAJ,IAAAA,UAAU,CAAEO,WAAD,IAAiB;AACxB,YAAMC,UAAU,GAAID,WAAW,CAACb,OAAZ,CAAoBe,WAApB,OAAsC,MAAvC,GAAgDb,SAAhD,GAA4DL,OAA/E;AACA,aAAOiB,UAAP;AACH,KAHS,CAAV,CAXwB,CAgBxB;;AACAnB,IAAAA,KAAK,CAACqB,cAAN,CAAsBC,eAAD,IAAqB;AACtC,aAAO,CAACA,eAAR;AACH,KAFD;AAGH,GApBD;;AAsBA5B,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACqB,cAAN,CAAqBC,eAAe,IAAI;AACpC,aAAOA,eAAe,IACtBd,SAAS,CAACI,QAAV,CAAmBZ,KAAK,CAACa,OAAzB,CADO,IAEPH,OAAO,CAACL,OAAR,CAAgBe,WAAhB,OAAkC,QAFlC;AAGH,KAJD;AAIG,GALE,EAKA,CAACpB,KAAD,EAAQQ,SAAR,EAAmBE,OAAO,CAACL,OAA3B,CALA,CAAT;AAQA,sBACI;AAAA,2BACI;AACA,MAAA,SAAS,EAAEK,OAAO,CAACP,QADnB;AAEA,MAAA,OAAO,EAAEW,aAFT;AAAA,iBAIKJ,OAAO,CAACJ,OAJb,eAKI;AAAA,kBAAOI,OAAO,CAACL;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH;;GA5DuBN,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { SavedModulesContext } from './SavedModulesContext';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport default function SaveBtn(props) {\r\n\r\n    const baseBtnClass = \"btn add-rm-mod-btn\"\r\n\r\n    const saveBtn = {\r\n        btnClass: `${baseBtnClass} ${props.btnSize === \"wide\"? \"btn-lg-icon\" : \"btn-sm-icon\"} primary-btn`,\r\n        btnText: \"Save\",\r\n        btnIcon: <AddIcon />\r\n    }\r\n\r\n    const removeBtn = {\r\n        btnClass: `${baseBtnClass} ${props.btnSize === \"wide\"? \"btn-lg-icon\" : \"btn-sm-icon\"} secondary-btn`,\r\n        btnText: \"Remove\",\r\n        btnIcon: <DeleteIcon />\r\n    }\r\n\r\n    const { savedMods, setSavedMods } = useContext(SavedModulesContext);\r\n    const [btnType, setBtnType] = useState(savedMods.includes(props.modCode)? removeBtn : saveBtn);\r\n\r\n    const toggleIsSaved = () => {\r\n        // update context\r\n        setSavedMods(prevSavedMods => {\r\n            if (prevSavedMods.includes(props.modCode)) {\r\n                return prevSavedMods.filter(mod => mod !== props.modCode)\r\n            } else {\r\n                return [props.modCode, ...prevSavedMods];\r\n            }\r\n        });\r\n\r\n        // update btn\r\n        setBtnType((prevBtnType) => {\r\n            const newBtnType = (prevBtnType.btnText.toLowerCase() === \"save\")? removeBtn : saveBtn;\r\n            return newBtnType;\r\n        });\r\n\r\n        // update showMsg\r\n        props.setShowSaveMsg((prevShowSaveMsg) => {\r\n            return !prevShowSaveMsg\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        props.setShowSaveMsg(prevShowSaveMsg => {\r\n            return prevShowSaveMsg &&\r\n            savedMods.includes(props.modCode) &&\r\n            btnType.btnText.toLowerCase() === \"remove\"\r\n        })}, [props, savedMods, btnType.btnText]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <button \r\n            className={btnType.btnClass}\r\n            onClick={toggleIsSaved}\r\n            >\r\n                {btnType.btnIcon}\r\n                <span>{btnType.btnText}</span>\r\n            </button>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}