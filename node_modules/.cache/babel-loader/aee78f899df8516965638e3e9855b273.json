{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Google Drive\\\\Projects\\\\SUSS mods\\\\sussmods-website-v2\\\\src\\\\ModuleInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useParams } from 'react-router-dom';\nimport ModuleMainInfo from './ModuleMainInfo';\nimport ModuleSideInfo from './ModuleSideInfo';\nimport SaveBtn from './SaveBtn';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModuleInfo() {\n  _s();\n\n  // get mod code to request data for\n  const {\n    modCode\n  } = useParams();\n  const url = `https://sussmods.herokuapp.com/module-info/${modCode}`;\n  const [modInfo, setmodInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showSaveMsg, setShowSaveMsg] = useState(false); // const { savedMods } = useContext(SavedModulesContext);\n\n  useEffect(() => {\n    fetch(url).then(res => {\n      if (!res.ok) {\n        throw new Error(\"Unable to request data for this resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      if (data.length < 1) {\n        throw new Error(\"Module not found\");\n      } else {\n        setmodInfo(data);\n        setError(null);\n        setIsLoading(false);\n      }\n    }).catch(err => {\n      setError(err.message);\n      setIsLoading(false);\n    });\n    return {\n      data,\n      isLoading,\n      error\n    };\n  }, [url]);\n  const [mod] = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Module not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ModuleMainInfo, {\n        modName: mod.name,\n        modCode: mod.code,\n        modDesc: mod.desc,\n        modTopics: mod.topics,\n        modOutcomes: mod.learningOutcomes,\n        modTextbook: mod.textbook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2 module-info-side\",\n        children: [/*#__PURE__*/_jsxDEV(ModuleSideInfo, {\n          modCu: mod.cu,\n          modSem: mod.sem,\n          modLevel: mod.level,\n          modPrereqs: mod.prerequisites,\n          modLang: mod.language,\n          modTimeTable: mod.timeTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SaveBtn, {\n          modCode: modCode,\n          setShowSaveMsg: setShowSaveMsg,\n          btnSize: \"wide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), showSaveMsg && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"saved-removed-text\",\n          children: [modCode, \" has been saved. View saved modules \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/saved-modules\",\n            children: \"here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n\n_s(ModuleInfo, \"ozK44XVfDqQs0NpmZeo8mGQDDtM=\", false, function () {\n  return [useParams];\n});\n\n_c = ModuleInfo;\n;\nexport default ModuleInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleInfo\");","map":{"version":3,"sources":["C:/Users/User/Google Drive/Projects/SUSS mods/sussmods-website-v2/src/ModuleInfo.jsx"],"names":["Link","useParams","ModuleMainInfo","ModuleSideInfo","SaveBtn","useState","useEffect","ModuleInfo","modCode","url","modInfo","setmodInfo","isLoading","setIsLoading","error","setError","showSaveMsg","setShowSaveMsg","fetch","then","res","ok","Error","json","data","length","catch","err","message","mod","name","code","desc","topics","learningOutcomes","textbook","cu","sem","level","prerequisites","language","timeTable"],"mappings":"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","sourcesContent":["import { Link, useParams } from 'react-router-dom';\r\nimport ModuleMainInfo from './ModuleMainInfo';\r\nimport ModuleSideInfo from './ModuleSideInfo';\r\nimport SaveBtn from './SaveBtn';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction ModuleInfo() {\r\n\r\n  // get mod code to request data for\r\n  const { modCode } = useParams();\r\n  const url = `https://sussmods.herokuapp.com/module-info/${modCode}`\r\n\r\n  const [modInfo, setmodInfo] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [showSaveMsg, setShowSaveMsg] = useState(false);\r\n\r\n  // const { savedMods } = useContext(SavedModulesContext);\r\n\r\n  useEffect(() => {\r\n    fetch(url)  \r\n          .then(res => {\r\n              if(!res.ok) {\r\n                  throw new Error(\"Unable to request data for this resource\");\r\n              }\r\n              return res.json();\r\n          })\r\n          .then(data => {\r\n              if (data.length < 1)  {\r\n                throw new Error(\"Module not found\");\r\n              } else {\r\n                setmodInfo(data);\r\n                setError(null);\r\n                setIsLoading(false);\r\n              }\r\n          })\r\n          .catch(err => {\r\n            setError(err.message);\r\n            setIsLoading(false);\r\n          })\r\n          return { data, isLoading, error }\r\n  }, [url]);\r\n  \r\n  const [mod] = data;\r\n\r\n  return (\r\n    <>\r\n      {isLoading &&\r\n        <h2>Loading...</h2>\r\n      }\r\n\r\n      {error &&\r\n        <h2>Module not found</h2>\r\n      }\r\n\r\n      {!isLoading && !error &&\r\n        <>\r\n          <ModuleMainInfo\r\n          modName={mod.name}\r\n          modCode={mod.code}\r\n          modDesc={mod.desc}\r\n          modTopics={mod.topics}\r\n          modOutcomes={mod.learningOutcomes}\r\n          modTextbook={mod.textbook}\r\n          /> \r\n\r\n          <div className=\"col-2 module-info-side\">\r\n          \r\n            <ModuleSideInfo\r\n            modCu={mod.cu}\r\n            modSem={mod.sem}\r\n            modLevel={mod.level}\r\n            modPrereqs={mod.prerequisites}\r\n            modLang={mod.language}\r\n            modTimeTable={mod.timeTable}\r\n            />\r\n\r\n            <SaveBtn\r\n            modCode={modCode}\r\n            setShowSaveMsg={setShowSaveMsg}\r\n            btnSize=\"wide\"\r\n            />\r\n\r\n          {showSaveMsg &&\r\n          <small className=\"saved-removed-text\">{modCode} has been saved. View saved modules <Link to='/saved-modules'>here.</Link></small>\r\n          }\r\n        </div>\r\n        \r\n      </>\r\n      }\r\n    </>\r\n    )\r\n};\r\n\r\nexport default ModuleInfo;"]},"metadata":{},"sourceType":"module"}