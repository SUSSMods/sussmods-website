{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Google Drive\\\\Projects\\\\SUSS mods\\\\sussmods-website-v2\\\\src\\\\SavedModuleList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport ModuleCard from './ModuleCard';\nimport PaginationBar from './PaginationBar';\nimport { SavedModulesContext } from './SavedModulesContext';\nimport useFetchMods from './useFetchMods';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SavedModuleList() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [modsPerPage] = useState(10); // get saved mods\n\n  const {\n    savedMods\n  } = useContext(SavedModulesContext);\n  const params = new URLSearchParams();\n  savedMods.forEach(modCode => {\n    params.append('code', modCode);\n  }); // fetch data\n\n  const {\n    mods,\n    isLoading,\n    Error\n  } = useFetchMods(`https://sussmods.herokuapp.com/modules?${params.toString()}`); // get curr page mods\n\n  const indexOfLastMod = currentPage * modsPerPage;\n  const indexOfFirstMod = indexOfLastMod - modsPerPage;\n  const currentMods = savedMods.length > 0 ? mods.slice(indexOfFirstMod, indexOfLastMod) : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6 modules-container\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), Error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error. Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), currentMods.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentMods.map(mod => /*#__PURE__*/_jsxDEV(ModuleCard, {\n          modCode: mod.code,\n          modName: mod.name,\n          modCu: mod.cu,\n          modSem: mod.sem,\n          modDesc: mod.desc\n        }, mod.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(PaginationBar, {\n          totalMods: currentMods.length,\n          modsPerPage: modsPerPage,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage,\n          alwaysShown: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"No modules saved yet. View available modules \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/modules\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n\n_s(SavedModuleList, \"EDQ3GucEDAQz1PD4is4mzYTpK3g=\", false, function () {\n  return [useFetchMods];\n});\n\n_c = SavedModuleList;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedModuleList\");","map":{"version":3,"sources":["C:/Users/User/Google Drive/Projects/SUSS mods/sussmods-website-v2/src/SavedModuleList.jsx"],"names":["React","useState","useContext","ModuleCard","PaginationBar","SavedModulesContext","useFetchMods","Link","SavedModuleList","currentPage","setCurrentPage","modsPerPage","savedMods","params","URLSearchParams","forEach","modCode","append","mods","isLoading","Error","toString","indexOfLastMod","indexOfFirstMod","currentMods","length","slice","map","mod","code","name","cu","sem","desc","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AAEtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,WAAD,IAAgBV,QAAQ,CAAC,EAAD,CAA9B,CAHsC,CAKtC;;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBV,UAAU,CAACG,mBAAD,CAAhC;AACA,QAAMQ,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAmBC,OAAD,IAAY;AAC1BH,IAAAA,MAAM,CAACI,MAAP,CAAc,MAAd,EAAsBD,OAAtB;AACH,GAFD,EARsC,CAYtC;;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA6Bd,YAAY,CAAE,0CAAyCO,MAAM,CAACQ,QAAP,EAAkB,EAA7D,CAA/C,CAbsC,CAetC;;AACA,QAAMC,cAAc,GAAGb,WAAW,GAAGE,WAArC;AACA,QAAMY,eAAe,GAAGD,cAAc,GAAGX,WAAzC;AACA,QAAMa,WAAW,GAAIZ,SAAS,CAACa,MAAV,GAAmB,CAApB,GAAyBP,IAAI,CAACQ,KAAL,CAAWH,eAAX,EAA4BD,cAA5B,CAAzB,GAAuE,EAA3F;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,iBAEKH,SAAS,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHL,EAMMC,KAAK,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPL,EAUMI,WAAW,CAACC,MAAZ,GAAqB,CAArB,gBACG;AAAA,mBACKD,WAAW,CAACG,GAAZ,CAAgBC,GAAG,iBAChB,QAAC,UAAD;AAEA,UAAA,OAAO,EAAEA,GAAG,CAACC,IAFb;AAGA,UAAA,OAAO,EAAED,GAAG,CAACE,IAHb;AAIA,UAAA,KAAK,EAAEF,GAAG,CAACG,EAJX;AAKA,UAAA,MAAM,EAAEH,GAAG,CAACI,GALZ;AAMA,UAAA,OAAO,EAAEJ,GAAG,CAACK;AANb,WACKL,GAAG,CAACM,EADT;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAaI,QAAC,aAAD;AACA,UAAA,SAAS,EAAEV,WAAW,CAACC,MADvB;AAEA,UAAA,WAAW,EAAEd,WAFb;AAGA,UAAA,WAAW,EAAEF,WAHb;AAIA,UAAA,cAAc,EAAEC,cAJhB;AAKA,UAAA,WAAW,EAAE;AALb;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA,sBADH,gBAuBG;AAAA,iFAAiD,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCT;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0CF;;GA9DuBF,e;UAaeF,Y;;;KAbfE,e;AA8DvB","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport ModuleCard from './ModuleCard';\r\nimport PaginationBar from './PaginationBar'\r\nimport { SavedModulesContext } from './SavedModulesContext';\r\nimport useFetchMods from './useFetchMods';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SavedModuleList() {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [modsPerPage] = useState(10);\r\n\r\n    // get saved mods\r\n    const { savedMods } = useContext(SavedModulesContext);\r\n    const params = new URLSearchParams();\r\n    savedMods.forEach((modCode)=> {\r\n        params.append('code', modCode);\r\n    });\r\n\r\n    // fetch data\r\n    const { mods, isLoading, Error } = useFetchMods(`https://sussmods.herokuapp.com/modules?${params.toString()}`);\r\n\r\n    // get curr page mods\r\n    const indexOfLastMod = currentPage * modsPerPage;\r\n    const indexOfFirstMod = indexOfLastMod - modsPerPage;\r\n    const currentMods = (savedMods.length > 0) ? mods.slice(indexOfFirstMod, indexOfLastMod) : [];\r\n    \r\n   return (\r\n       <>\r\n           <div className=\"col-6 modules-container\">\r\n\r\n               {isLoading && \r\n                <h2>Loading...</h2>\r\n                }\r\n\r\n                {Error && \r\n                <h2>Error. Please try again later.</h2>\r\n                }\r\n\r\n                {currentMods.length > 0 ? (\r\n                    <>\r\n                        {currentMods.map(mod => (\r\n                            <ModuleCard\r\n                            key={mod.id}\r\n                            modCode={mod.code}   \r\n                            modName={mod.name}\r\n                            modCu={mod.cu}\r\n                            modSem={mod.sem}\r\n                            modDesc={mod.desc}\r\n                            />\r\n                            ))\r\n                        }\r\n\r\n                        <PaginationBar \r\n                        totalMods={currentMods.length} \r\n                        modsPerPage={modsPerPage} \r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n                        alwaysShown={true}\r\n                        />\r\n                    </>\r\n                ) : (\r\n                    <h3>No modules saved yet. View available modules <Link to=\"/modules\">here.</Link></h3>\r\n                    )\r\n                }\r\n\r\n           </div>\r\n       </>\r\n   )\r\n};"]},"metadata":{},"sourceType":"module"}